{
  "hash": "aa2cc7665d83961ddaadfbca8297ea68",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exemplo 02\"\n---\n\n\n## Análise de Sensibilidade\n\nNo problema das urnas não havia dúvida com relação aos ganhos ou perdas, bem como das probabilidades envolvidas, pois o espaço amostral e as regras de apostas estavam bem definidos.\n\nMuitas vezes a situação não está bem clara e existem dúvidas com relação as probabilidade e aos valores envolvidos. Neste casos é muito comum se fazer o que se chama de análise de sensibilidade.\n\nA análise de sensibilidade tem como objetivo avaliar se para diferentes cenários de valores (ou probabilidades), ocorre uma mudança na decisão inicialmente indicada. Vamos ver um exemplo simples para entendermos a questão.\n\n## Exemplo de Arvore\n\n![Exemplo de Arvore de Decisão](/images/arvore_simples.png)\n\n## Algoritmo da arvore (simples)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nno_de_prob <- function(prob,valores) {\n  teste <- sum(prob)==1\n  if (teste) {\n   vme <- sum(prob*valores)\n  } \n  else {\n\n  vme <- \"Probabilidades devem somar 1\"\n    \n  }\n return(vme) \n}\n\n(vme <- no_de_prob(c(0.1,0.3,0.6), c(20000,10000, -5000)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2000\n```\n\n\n:::\n\n```{.r .cell-code}\nno_de_dec <- function(vmes, ramo) {\n  maior_vme <- max(vmes)\n  ramo <- which.max(vmes)\n  decisao <- c(maior_vme, ramo)\n  return(decisao)\n}\n\nno_de_dec(c(vme,0),)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2000    1\n```\n\n\n:::\n:::\n\n\n## Sensibilidade\n\nPoderia haver uma incerteza nos ganhos da pizzaria em todos os tipos de demanda:\n\n-   Alta\n\n-   Média\n\n-   Baixa\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalta <- seq(10000,30000, by=1000)\nmedia <- seq(1000,21000, by=1000)\nbaixa <- seq(-10000,10000, by=1000)\n\nvme_a <- rep(0, length(alta))\nvme_m <- rep(0, length(media))\nvme_b <- rep(0, length(baixa))\nfor (i in 1:length(alta)) {\n  vme_a[i] <- no_de_prob(c(0.1,0.3,0.6), c(alta[i],10000, -5000))\n  vme_m[i] <- no_de_prob(c(0.1,0.3,0.6), c(20000,media[i], -5000))\n  vme_b[i] <- no_de_prob(c(0.1,0.3,0.6), c(20000,10000, baixa[i]))\n}\nsens_vme <- data.frame(alta,vme_a,media,vme_m,baixa,vme_b)\n```\n:::\n\n\n## Visualização\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(sens_vme, aes(x=alta, y=vme_a)) + geom_line() + \n  theme_light() + labs(title = \"Reflexos no VME a partir de mudanças na demanda alta\") + xlab(\"Retorno na demanda alta\") + ylab(\"VME\")\n```\n\n::: {.cell-output-display}\n![](exe02_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n\n```{.r .cell-code}\nggplot(sens_vme, aes(x=media, y=vme_m)) + geom_line() + \n  theme_light() + labs(title = \"Reflexos no VME a partir de mudanças na demanda média\") + xlab(\"Retorno na demanda média\") + ylab(\"VME\") +\n  geom_hline(yintercept=0, linetype=\"dashed\", color = \"red\")\n```\n\n::: {.cell-output-display}\n![](exe02_files/figure-html/unnamed-chunk-3-2.png){width=960}\n:::\n\n```{.r .cell-code}\nggplot(sens_vme, aes(x=baixa, y=vme_b)) + geom_line() + \n  theme_light() + labs(title = \"Reflexos no VME a partir de mudanças na demanda baixa\") + xlab(\"Retorno na demanda baixa\") + ylab(\"VME\") + geom_hline(yintercept=0, linetype=\"dashed\", color = \"red\")\n```\n\n::: {.cell-output-display}\n![](exe02_files/figure-html/unnamed-chunk-3-3.png){width=960}\n:::\n:::\n\n\n## Quando o VME \\<0 ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmen_zero <- vme_m<0\ndata.frame(vme_m[men_zero], media[men_zero])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  vme_m.men_zero. media.men_zero.\n1            -700            1000\n2            -400            2000\n3            -100            3000\n```\n\n\n:::\n\n```{.r .cell-code}\nmen_zero <- vme_b<0\ndata.frame(vme_b[men_zero], baixa[men_zero])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  vme_b.men_zero. baixa.men_zero.\n1           -1000          -10000\n2            -400           -9000\n```\n\n\n:::\n\n```{.r .cell-code}\nsens_vme\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    alta vme_a media vme_m  baixa vme_b\n1  10000  1000  1000  -700 -10000 -1000\n2  11000  1100  2000  -400  -9000  -400\n3  12000  1200  3000  -100  -8000   200\n4  13000  1300  4000   200  -7000   800\n5  14000  1400  5000   500  -6000  1400\n6  15000  1500  6000   800  -5000  2000\n7  16000  1600  7000  1100  -4000  2600\n8  17000  1700  8000  1400  -3000  3200\n9  18000  1800  9000  1700  -2000  3800\n10 19000  1900 10000  2000  -1000  4400\n11 20000  2000 11000  2300      0  5000\n12 21000  2100 12000  2600   1000  5600\n13 22000  2200 13000  2900   2000  6200\n14 23000  2300 14000  3200   3000  6800\n15 24000  2400 15000  3500   4000  7400\n16 25000  2500 16000  3800   5000  8000\n17 26000  2600 17000  4100   6000  8600\n18 27000  2700 18000  4400   7000  9200\n19 28000  2800 19000  4700   8000  9800\n20 29000  2900 20000  5000   9000 10400\n21 30000  3000 21000  5300  10000 11000\n```\n\n\n:::\n:::\n",
    "supporting": [
      "exe02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}